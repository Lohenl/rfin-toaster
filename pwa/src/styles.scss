
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$toasterbank-primary: mat-palette($mat-green);
$toasterbank-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$toasterbank-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$toasterbank-theme: mat-light-theme($toasterbank-primary, $toasterbank-accent, $toasterbank-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($toasterbank-theme);

// Define an alternate dark theme.
$dark-primary: mat-palette($mat-green);
$dark-accent:  mat-palette($mat-green, 900, 900, 900);
$dark-warn:    mat-palette($mat-deep-orange);
$dark-theme:   mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

.unicorn-dark-theme {
    @include angular-material-theme($dark-theme);
}

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: "Cabin", Roboto, "Helvetica Neue", sans-serif; }

main { 
    position: absolute;
    right: 0px;
    left: 0px;
    bottom: 0px;
    top: 0px; 
}

// universal-parallax CSS

.parallax__container {
	clip: rect(0, auto, auto, 0);
	height: 100%;
	left: 0;
	overflow: hidden;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: -100;
}

.parallax {
	position: fixed;
	top: 0;
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;
	width: 100%;

	/* BG behaviour */
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
} 